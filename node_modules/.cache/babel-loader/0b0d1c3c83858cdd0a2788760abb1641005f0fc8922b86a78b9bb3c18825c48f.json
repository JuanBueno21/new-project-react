{"ast":null,"code":"var _s = $RefreshSig$();\n// import React from 'react';\n\n// function useLocalStorage(itemName, initialValue) {\n//   const [state, dispatch] = React.useReducer(reducer, initialState({ initialValue }));\n//   const { sincronizedItem, error, loading, item } = state;\n\n//   // ACTION CREATORS\n//   const onError = (error) => dispatch({\n//     type: actionType.error, payload: error\n//   });\n//   const onSuccess = (item) => dispatch({\n//     type: actionType.success, payload: error\n//   });\n//   const onSave = (item) => dispatch({\n//     type: actionType.save, payload: item\n//   });\n//   const onSincronize = () => dispatch({\n//     type: actionType.sincronize, payload: item\n//   });\n\n//   React.useEffect(() => {\n//     setTimeout(() => {\n//       try {\n//         const localStorageItem = localStorage.getItem(itemName);\n//         let parsedItem;\n\n//         if (!localStorageItem) {\n//           localStorage.setItem(itemName, JSON.stringify(initialValue));\n//           parsedItem = initialValue;\n//         } else {\n//           parsedItem = JSON.parse(localStorageItem);\n//         }\n\n//         onSuccess(parsedItem);\n//       } catch (error) {\n//         onError(error);\n//       }\n//     }, 3000);\n//   }, [sincronizedItem]);\n\n//   const saveItem = (newItem) => {\n//     try {\n//       const stringifiedItem = JSON.stringify(newItem);\n//       localStorage.setItem(itemName, stringifiedItem);\n//       onSave(newItem);\n//     } catch (error) {\n//       onError(error);\n//     }\n//   };\n\n//   const sincronizeItem = () => {\n//     onSincronize();\n//   }\n\n//   return {\n//     item,\n//     saveItem,\n//     loading,\n//     error,\n//     sincronizeItem,\n//   };\n// }\n\n// const initialState = ({ initialValue }) => ({\n//   sincronizeItem: true,\n//   error: false,\n//   loading: true,\n//   item: initialValue,\n// });\n\n// const actionType = {\n//   error: \"ERROR\",\n//   success: \"SUCCESS\",\n//   save: \"SAVE\",\n//   sincronize: \"SINCRONIZE\"\n// }\n\n// const reducerObject = (state, payload) => ({\n//   [actionType.error]: {\n//     ...state,\n//     error: true,\n//   },\n//   [actionType.success]: {\n//     ...state,\n//     error: false,\n//     loading: false,\n//     sincronizedItem: true,\n//     item: payload,\n//   },\n//   [actionType.save]: {\n//     ...state,\n//     item: payload,\n//   },\n//   [actionType.sincronize]: {\n//     ...state,\n//     sincronizedItem: false,\n//     loading: true,\n//   },\n// })\n\n// const reducer = (state, action) => {\n//   return reducerObject(state, action.payload)[action.type] || state;\n// };\n\n// export { useLocalStorage };\n\n// // localStorage.removeItem(\"TODOS_V1\");\n// // const defaultTodos = [\n// //   { text: 'cortar cebolla', completed: true },\n// //   { text: 'tomar el curso de react.js', completed: false },\n// //   { text: 'llorar con la llorona', completed: false },\n// //   { text: 'BLA bla bla', completed: false },\n// //   { text: 'usar estados derivados', completed: true },\n// // ]\n\n// // localStorage.setItem(\"TODOS_V1\" , JSON.stringify(defaultTodos));\n\nimport React from 'react';\nfunction useLocalStorage(itemName, initialValue) {\n  _s();\n  const [state, dispatch] = React.useReducer(reducer, initialState({\n    initialValue\n  }));\n  const {\n    sincronizedItem,\n    error,\n    loading,\n    item\n  } = state;\n\n  // ACTION CREATORS\n  const onError = error => dispatch({\n    type: actionTypes.error,\n    payload: error\n  });\n  const onSuccess = item => dispatch({\n    type: actionTypes.success,\n    payload: item\n  });\n  const onSave = item => dispatch({\n    type: actionTypes.save,\n    payload: item\n  });\n  const onSincronize = () => dispatch({\n    type: actionTypes.sincronize\n  });\n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        }\n        onSuccess(parsedItem);\n      } catch (error) {\n        onError(error);\n      }\n    }, 3000);\n  }, [sincronizedItem]);\n  const saveItem = newItem => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      onSave(newItem);\n    } catch (error) {\n      onError(error);\n    }\n  };\n  const sincronizeItem = () => {\n    onSincronize();\n  };\n  return {\n    item,\n    saveItem,\n    loading,\n    error,\n    sincronizeItem\n  };\n}\n_s(useLocalStorage, \"8nPFCgGuqnzEBd2WVqRm4+JKV/Y=\");\nconst initialState = ({\n  initialValue\n}) => ({\n  sincronizedItem: true,\n  error: false,\n  loading: true,\n  item: initialValue\n});\nconst actionTypes = {\n  error: 'ERROR',\n  success: 'SUCCESS',\n  save: 'SAVE',\n  sincronize: 'SINCRONIZE'\n};\nconst reducerObject = (state, payload) => ({\n  [actionTypes.error]: {\n    ...state,\n    error: true\n  },\n  [actionTypes.success]: {\n    ...state,\n    error: false,\n    loading: false,\n    sincronizedItem: true,\n    item: payload\n  },\n  [actionTypes.save]: {\n    ...state,\n    item: payload\n  },\n  [actionTypes.sincronize]: {\n    ...state,\n    sincronizedItem: false,\n    loading: true\n  }\n});\nconst reducer = (state, action) => {\n  return reducerObject(state, action.payload)[action.type] || state;\n};\nexport { useLocalStorage };","map":{"version":3,"names":["React","useLocalStorage","itemName","initialValue","_s","state","dispatch","useReducer","reducer","initialState","sincronizedItem","error","loading","item","onError","type","actionTypes","payload","onSuccess","success","onSave","save","onSincronize","sincronize","useEffect","setTimeout","localStorageItem","localStorage","getItem","parsedItem","setItem","JSON","stringify","parse","saveItem","newItem","stringifiedItem","sincronizeItem","reducerObject","action"],"sources":["/Users/juanbueno/Desktop/new-project-react/src/App/useLocalStorage.js"],"sourcesContent":["// import React from 'react';\n\n// function useLocalStorage(itemName, initialValue) {\n//   const [state, dispatch] = React.useReducer(reducer, initialState({ initialValue }));\n//   const { sincronizedItem, error, loading, item } = state;\n\n//   // ACTION CREATORS\n//   const onError = (error) => dispatch({\n//     type: actionType.error, payload: error\n//   });\n//   const onSuccess = (item) => dispatch({\n//     type: actionType.success, payload: error\n//   });\n//   const onSave = (item) => dispatch({\n//     type: actionType.save, payload: item\n//   });\n//   const onSincronize = () => dispatch({\n//     type: actionType.sincronize, payload: item\n//   });\n\n//   React.useEffect(() => {\n//     setTimeout(() => {\n//       try {\n//         const localStorageItem = localStorage.getItem(itemName);\n//         let parsedItem;\n\n//         if (!localStorageItem) {\n//           localStorage.setItem(itemName, JSON.stringify(initialValue));\n//           parsedItem = initialValue;\n//         } else {\n//           parsedItem = JSON.parse(localStorageItem);\n//         }\n\n//         onSuccess(parsedItem);\n//       } catch (error) {\n//         onError(error);\n//       }\n//     }, 3000);\n//   }, [sincronizedItem]);\n\n//   const saveItem = (newItem) => {\n//     try {\n//       const stringifiedItem = JSON.stringify(newItem);\n//       localStorage.setItem(itemName, stringifiedItem);\n//       onSave(newItem);\n//     } catch (error) {\n//       onError(error);\n//     }\n//   };\n\n//   const sincronizeItem = () => {\n//     onSincronize();\n//   }\n\n//   return {\n//     item,\n//     saveItem,\n//     loading,\n//     error,\n//     sincronizeItem,\n//   };\n// }\n\n// const initialState = ({ initialValue }) => ({\n//   sincronizeItem: true,\n//   error: false,\n//   loading: true,\n//   item: initialValue,\n// });\n\n// const actionType = {\n//   error: \"ERROR\",\n//   success: \"SUCCESS\",\n//   save: \"SAVE\",\n//   sincronize: \"SINCRONIZE\"\n// }\n\n// const reducerObject = (state, payload) => ({\n//   [actionType.error]: {\n//     ...state,\n//     error: true,\n//   },\n//   [actionType.success]: {\n//     ...state,\n//     error: false,\n//     loading: false,\n//     sincronizedItem: true,\n//     item: payload,\n//   },\n//   [actionType.save]: {\n//     ...state,\n//     item: payload,\n//   },\n//   [actionType.sincronize]: {\n//     ...state,\n//     sincronizedItem: false,\n//     loading: true,\n//   },\n// })\n\n// const reducer = (state, action) => {\n//   return reducerObject(state, action.payload)[action.type] || state;\n// };\n\n// export { useLocalStorage };\n\n// // localStorage.removeItem(\"TODOS_V1\");\n// // const defaultTodos = [\n// //   { text: 'cortar cebolla', completed: true },\n// //   { text: 'tomar el curso de react.js', completed: false },\n// //   { text: 'llorar con la llorona', completed: false },\n// //   { text: 'BLA bla bla', completed: false },\n// //   { text: 'usar estados derivados', completed: true },\n// // ]\n\n// // localStorage.setItem(\"TODOS_V1\" , JSON.stringify(defaultTodos));\n\n\n\n\n\n\n\n\nimport React from 'react';\n\nfunction useLocalStorage(itemName, initialValue) {\n  const [state, dispatch] = React.useReducer(reducer, initialState({ initialValue }));\n  const {\n    sincronizedItem,\n    error,\n    loading,\n    item,\n  } = state;\n\n  // ACTION CREATORS\n  const onError = (error) => dispatch({\n    type: actionTypes.error,\n    payload: error,\n  });\n\n  const onSuccess = (item) => dispatch({\n    type: actionTypes.success,\n    payload: item,\n  });\n\n  const onSave = (item) => dispatch({\n    type: actionTypes.save,\n    payload: item,\n  });\n\n  const onSincronize = () => dispatch({\n    type: actionTypes.sincronize,\n  });\n  \n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n        \n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        }\n\n        onSuccess(parsedItem);\n      } catch(error) {\n        onError(error);\n      }\n    }, 3000);\n  }, [sincronizedItem]);\n  \n  const saveItem = (newItem) => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      onSave(newItem);\n    } catch(error) {\n      onError(error);\n    }\n  };\n\n  const sincronizeItem = () => {\n    onSincronize();\n  };\n\n  return {\n    item,\n    saveItem,\n    loading,\n    error,\n    sincronizeItem,\n  };\n}\n\nconst initialState = ({ initialValue }) => ({\n  sincronizedItem: true,\n  error: false,\n  loading: true,\n  item: initialValue,\n});\n\nconst actionTypes = {\n  error: 'ERROR',\n  success: 'SUCCESS',\n  save: 'SAVE',\n  sincronize: 'SINCRONIZE',\n};\n\nconst reducerObject = (state, payload) => ({\n  [actionTypes.error]: {\n    ...state,\n    error: true,\n  },\n  [actionTypes.success]: {\n    ...state,\n    error: false,\n    loading: false,\n    sincronizedItem: true,\n    item: payload,\n  },\n  [actionTypes.save]: {\n    ...state,\n    item: payload,\n  },\n  [actionTypes.sincronize]: {\n    ...state,\n    sincronizedItem: false,\n    loading: true,\n  },\n});\n\nconst reducer = (state, action) => {\n  return reducerObject(state, action.payload)[action.type] || state;\n};\n\nexport { useLocalStorage };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _s = $RefreshSig$();\n// import React from 'react';\n\n// function useLocalStorage(itemName, initialValue) {\n//   const [state, dispatch] = React.useReducer(reducer, initialState({ initialValue }));\n//   const { sincronizedItem, error, loading, item } = state;\n\n//   // ACTION CREATORS\n//   const onError = (error) => dispatch({\n//     type: actionType.error, payload: error\n//   });\n//   const onSuccess = (item) => dispatch({\n//     type: actionType.success, payload: item\n//   });\n//   const onSave = (item) => dispatch({\n//     type: actionType.save, payload: item\n//   });\n//   const onSincronize = () => dispatch({\n//     type: actionType.sincronize,\n//   });\n\n//   React.useEffect(() => {\n//     setTimeout(() => {\n//       try {\n//         const localStorageItem = localStorage.getItem(itemName);\n//         let parsedItem;\n\n//         if (!localStorageItem) {\n//           localStorage.setItem(itemName, JSON.stringify(initialValue));\n//           parsedItem = initialValue;\n//         } else {\n//           parsedItem = JSON.parse(localStorageItem);\n//         }\n\n//         onSuccess(parsedItem);\n//       } catch (error) {\n//         onError(error);\n//       }\n//     }, 3000);\n//   }, [sincronizedItem]);\n\n//   const saveItem = (newItem) => {\n//     try {\n//       const stringifiedItem = JSON.stringify(newItem);\n//       localStorage.setItem(itemName, stringifiedItem);\n//       onSave(newItem);\n//     } catch (error) {\n//       onError(error);\n//     }\n//   };\n\n//   const sincronizeItem = () => {\n//     onSincronize();\n//   }\n\n//   return {\n//     item,\n//     saveItem,\n//     loading,\n//     error,\n//     sincronizeItem,\n//   };\n// }\n\n// const initialState = ({ initialValue }) => ({\n//   sincronizedItem: true,\n//   error: false,\n//   loading: true,\n//   item: initialValue,\n// });\n\n// const actionType = {\n//   error: \"ERROR\",\n//   success: \"SUCCESS\",\n//   save: \"SAVE\",\n//   sincronize: \"SINCRONIZE\"\n// };\n\n// const reducerObject = (state, payload) => ({\n//   [actionType.error]: {\n//     ...state,\n//     error: true,\n//   },\n//   [actionType.success]: {\n//     ...state,\n//     error: false,\n//     loading: false,\n//     sincronizedItem: true,\n//     item: payload,\n//   },\n//   [actionType.save]: {\n//     ...state,\n//     item: payload,\n//   },\n//   [actionType.sincronize]: {\n//     ...state,\n//     sincronizedItem: false,\n//     loading: true,\n//   },\n// });\n\n// const reducer = (state, action) => {\n//   return reducerObject(state, action.payload)[action.type] || state;\n// };\n\n// export { useLocalStorage };\n\nimport React from 'react';\nimport { useLocalStorage } from './useLocalStorage';\nfunction useTodos() {\n  _s();\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    sincronizeItem: sincronizeTodos,\n    loading,\n    error\n  } = useLocalStorage('TODOS_V1', []);\n  const [searchValue, setSearchValue] = React.useState('');\n  const [openModal, setOpenModal] = React.useState(false);\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n  let searchedTodos = [];\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n  const addTodo = text => {\n    const newTodos = [...todos];\n    newTodos.push({\n      completed: false,\n      text\n    });\n    saveTodos(newTodos);\n  };\n  const completeTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  };\n  const deleteTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n  const state = {\n    loading,\n    error,\n    totalTodos,\n    completedTodos,\n    searchValue,\n    searchedTodos,\n    openModal\n  };\n  const stateUpdaters = {\n    setSearchValue,\n    addTodo,\n    completeTodo,\n    deleteTodo,\n    setOpenModal,\n    sincronizeTodos\n  };\n  return {\n    state,\n    stateUpdaters\n  };\n}\n_s(useTodos, \"tJhzwlHfXj4ZqHogRsrtzI+t86g=\", false, function () {\n  return [useLocalStorage];\n});\nexport { useTodos };","map":{"version":3,"names":["React","useLocalStorage","useTodos","_s","item","todos","saveItem","saveTodos","sincronizeItem","sincronizeTodos","loading","error","searchValue","setSearchValue","useState","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","state","stateUpdaters"],"sources":["/Users/juanbueno/Desktop/new-project-react/src/App/useLocalStorage.js"],"sourcesContent":["// import React from 'react';\n\n// function useLocalStorage(itemName, initialValue) {\n//   const [state, dispatch] = React.useReducer(reducer, initialState({ initialValue }));\n//   const { sincronizedItem, error, loading, item } = state;\n\n//   // ACTION CREATORS\n//   const onError = (error) => dispatch({\n//     type: actionType.error, payload: error\n//   });\n//   const onSuccess = (item) => dispatch({\n//     type: actionType.success, payload: item\n//   });\n//   const onSave = (item) => dispatch({\n//     type: actionType.save, payload: item\n//   });\n//   const onSincronize = () => dispatch({\n//     type: actionType.sincronize,\n//   });\n\n//   React.useEffect(() => {\n//     setTimeout(() => {\n//       try {\n//         const localStorageItem = localStorage.getItem(itemName);\n//         let parsedItem;\n\n//         if (!localStorageItem) {\n//           localStorage.setItem(itemName, JSON.stringify(initialValue));\n//           parsedItem = initialValue;\n//         } else {\n//           parsedItem = JSON.parse(localStorageItem);\n//         }\n\n//         onSuccess(parsedItem);\n//       } catch (error) {\n//         onError(error);\n//       }\n//     }, 3000);\n//   }, [sincronizedItem]);\n\n//   const saveItem = (newItem) => {\n//     try {\n//       const stringifiedItem = JSON.stringify(newItem);\n//       localStorage.setItem(itemName, stringifiedItem);\n//       onSave(newItem);\n//     } catch (error) {\n//       onError(error);\n//     }\n//   };\n\n//   const sincronizeItem = () => {\n//     onSincronize();\n//   }\n\n//   return {\n//     item,\n//     saveItem,\n//     loading,\n//     error,\n//     sincronizeItem,\n//   };\n// }\n\n// const initialState = ({ initialValue }) => ({\n//   sincronizedItem: true,\n//   error: false,\n//   loading: true,\n//   item: initialValue,\n// });\n\n// const actionType = {\n//   error: \"ERROR\",\n//   success: \"SUCCESS\",\n//   save: \"SAVE\",\n//   sincronize: \"SINCRONIZE\"\n// };\n\n// const reducerObject = (state, payload) => ({\n//   [actionType.error]: {\n//     ...state,\n//     error: true,\n//   },\n//   [actionType.success]: {\n//     ...state,\n//     error: false,\n//     loading: false,\n//     sincronizedItem: true,\n//     item: payload,\n//   },\n//   [actionType.save]: {\n//     ...state,\n//     item: payload,\n//   },\n//   [actionType.sincronize]: {\n//     ...state,\n//     sincronizedItem: false,\n//     loading: true,\n//   },\n// });\n\n// const reducer = (state, action) => {\n//   return reducerObject(state, action.payload)[action.type] || state;\n// };\n\n// export { useLocalStorage };\n\nimport React from 'react';\nimport { useLocalStorage } from './useLocalStorage';\n\nfunction useTodos() {\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    sincronizeItem: sincronizeTodos,\n    loading,\n    error,\n  } = useLocalStorage('TODOS_V1', []);\n  const [searchValue, setSearchValue] = React.useState('');\n  const [openModal, setOpenModal] = React.useState(false);\n\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const addTodo = (text) => {\n    const newTodos = [...todos];\n    newTodos.push({\n      completed: false,\n      text,\n    });\n    saveTodos(newTodos);\n  };\n\n  const completeTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  };\n\n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n  \n  const state = {\n    loading,\n    error,\n    totalTodos,\n    completedTodos,\n    searchValue,\n    searchedTodos,\n    openModal,\n  };\n  \n  const stateUpdaters = {\n    setSearchValue,\n    addTodo,\n    completeTodo,\n    deleteTodo,\n    setOpenModal,\n    sincronizeTodos,\n  };\n\n  return { state, stateUpdaters };\n}\n\nexport { useTodos };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// import React from 'react';\n\n// function useLocalStorage(itemName, initialValue) {\n//   const [state, dispatch] = React.useReducer(reducer, initialState({ initialValue }));\n//   const { sincronizedItem, error, loading, item } = state;\n\n//   // ACTION CREATORS\n//   const onError = (error) => dispatch({\n//     type: actionType.error, payload: error\n//   });\n//   const onSuccess = (item) => dispatch({\n//     type: actionType.success, payload: error\n//   });\n//   const onSave = (item) => dispatch({\n//     type: actionType.save, payload: item\n//   });\n//   const onSincronize = () => dispatch({\n//     type: actionType.sincronize, payload: item\n//   });\n\n//   React.useEffect(() => {\n//     setTimeout(() => {\n//       try {\n//         const localStorageItem = localStorage.getItem(itemName);\n//         let parsedItem;\n\n//         if (!localStorageItem) {\n//           localStorage.setItem(itemName, JSON.stringify(initialValue));\n//           parsedItem = initialValue;\n//         } else {\n//           parsedItem = JSON.parse(localStorageItem);\n//         }\n\n//         onSuccess(parsedItem);\n//       } catch (error) {\n//         onError(error);\n//       }\n//     }, 3000);\n//   }, [sincronizedItem]);\n\n//   const saveItem = (newItem) => {\n//     try {\n//       const stringifiedItem = JSON.stringify(newItem);\n//       localStorage.setItem(itemName, stringifiedItem);\n//       onSave(newItem);\n//     } catch (error) {\n//       onError(error);\n//     }\n//   };\n\n//   const sincronizeItem = () => {\n//     onSincronize();\n//   }\n\n//   return {\n//     item,\n//     saveItem,\n//     loading,\n//     error,\n//     sincronizeItem,\n//   };\n// }\n\n// const initialState = ({ initialValue }) => ({\n//   sincronizeItem: true,\n//   error: false,\n//   loading: true,\n//   item: initialValue,\n// });\n\n// const actionType = {\n//   error: \"ERROR\",\n//   success: \"SUCCESS\",\n//   save: \"SAVE\",\n//   sincronize: \"SINCRONIZE\"\n// }\n\n// const reducerObject = (state, payload) => ({\n//   [actionType.error]: {\n//     ...state,\n//     error: true,\n//   },\n//   [actionType.success]: {\n//     ...state,\n//     error: false,\n//     loading: false,\n//     sincronizedItem: true,\n//     item: payload,\n//   },\n//   [actionType.save]: {\n//     ...state,\n//     item: payload,\n//   },\n//   [actionType.sincronize]: {\n//     ...state,\n//     sincronizedItem: false,\n//     loading: true,\n//   },\n// })\n\n// const reducer = (state, action) => {\n//   return reducerObject(state, action.payload)[action.type] || state;\n// };\n\n// export { useLocalStorage };\n\n// // localStorage.removeItem(\"TODOS_V1\");\n// // const defaultTodos = [\n// //   { text: 'cortar cebolla', completed: true },\n// //   { text: 'tomar el curso de react.js', completed: false },\n// //   { text: 'llorar con la llorona', completed: false },\n// //   { text: 'BLA bla bla', completed: false },\n// //   { text: 'usar estados derivados', completed: true },\n// // ]\n\n// // localStorage.setItem(\"TODOS_V1\" , JSON.stringify(defaultTodos));","map":{"version":3,"names":[],"sources":["/Users/juanbueno/Desktop/new-project-react/src/App/useLocalStorage.js"],"sourcesContent":["// import React from 'react';\n\n// function useLocalStorage(itemName, initialValue) {\n//   const [state, dispatch] = React.useReducer(reducer, initialState({ initialValue }));\n//   const { sincronizedItem, error, loading, item } = state;\n\n//   // ACTION CREATORS\n//   const onError = (error) => dispatch({\n//     type: actionType.error, payload: error\n//   });\n//   const onSuccess = (item) => dispatch({\n//     type: actionType.success, payload: error\n//   });\n//   const onSave = (item) => dispatch({\n//     type: actionType.save, payload: item\n//   });\n//   const onSincronize = () => dispatch({\n//     type: actionType.sincronize, payload: item\n//   });\n\n//   React.useEffect(() => {\n//     setTimeout(() => {\n//       try {\n//         const localStorageItem = localStorage.getItem(itemName);\n//         let parsedItem;\n\n//         if (!localStorageItem) {\n//           localStorage.setItem(itemName, JSON.stringify(initialValue));\n//           parsedItem = initialValue;\n//         } else {\n//           parsedItem = JSON.parse(localStorageItem);\n//         }\n\n//         onSuccess(parsedItem);\n//       } catch (error) {\n//         onError(error);\n//       }\n//     }, 3000);\n//   }, [sincronizedItem]);\n\n//   const saveItem = (newItem) => {\n//     try {\n//       const stringifiedItem = JSON.stringify(newItem);\n//       localStorage.setItem(itemName, stringifiedItem);\n//       onSave(newItem);\n//     } catch (error) {\n//       onError(error);\n//     }\n//   };\n\n//   const sincronizeItem = () => {\n//     onSincronize();\n//   }\n\n//   return {\n//     item,\n//     saveItem,\n//     loading,\n//     error,\n//     sincronizeItem,\n//   };\n// }\n\n// const initialState = ({ initialValue }) => ({\n//   sincronizeItem: true,\n//   error: false,\n//   loading: true,\n//   item: initialValue,\n// });\n\n// const actionType = {\n//   error: \"ERROR\",\n//   success: \"SUCCESS\",\n//   save: \"SAVE\",\n//   sincronize: \"SINCRONIZE\"\n// }\n\n// const reducerObject = (state, payload) => ({\n//   [actionType.error]: {\n//     ...state,\n//     error: true,\n//   },\n//   [actionType.success]: {\n//     ...state,\n//     error: false,\n//     loading: false,\n//     sincronizedItem: true,\n//     item: payload,\n//   },\n//   [actionType.save]: {\n//     ...state,\n//     item: payload,\n//   },\n//   [actionType.sincronize]: {\n//     ...state,\n//     sincronizedItem: false,\n//     loading: true,\n//   },\n// })\n\n// const reducer = (state, action) => {\n//   return reducerObject(state, action.payload)[action.type] || state;\n// };\n\n// export { useLocalStorage };\n\n// // localStorage.removeItem(\"TODOS_V1\");\n// // const defaultTodos = [\n// //   { text: 'cortar cebolla', completed: true },\n// //   { text: 'tomar el curso de react.js', completed: false },\n// //   { text: 'llorar con la llorona', completed: false },\n// //   { text: 'BLA bla bla', completed: false },\n// //   { text: 'usar estados derivados', completed: true },\n// // ]\n\n// // localStorage.setItem(\"TODOS_V1\" , JSON.stringify(defaultTodos));"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
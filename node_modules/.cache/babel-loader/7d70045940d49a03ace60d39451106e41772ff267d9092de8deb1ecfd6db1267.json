{"ast":null,"code":"// import React from 'react';\n// import { useTodos } from './useTodos';\n// import { TodoHeader } from '../TodoHeader';\n// import { TodoCounter } from '../TodoCounter';\n// import { TodoSearch } from '../TodoSearch';\n// import { TodoList } from '../TodoList';\n// import { TodoItem } from '../TodoItem';\n// import { TodosError } from '../TodosError';\n// import { TodosLoading } from '../TodoLoading';\n// import { EmptyTodos } from '../EmptyTodos';\n// import { TodoForm } from '../TodoForm';\n// import { CreateTodoButton } from '../CreateTodoButton';\n// import { Modal } from '../Modal';\n// import { ChangeAlert } from '../changeAlert';\n\n// function App() {\n//   const {\n//     error,\n//     loading,\n//     searchedTodos = [],\n//     completeTodo,\n//     deleteTodo,\n//     openModal,\n//     setOpenModal,\n//     totalTodos,\n//     completedTodos,\n//     searchValue,\n//     setSearchValue,\n//     addTodo,\n//     sincronizeTodos,\n//   } = useTodos();\n\n//   return (\n//     <React.Fragment>\n//       <TodoHeader loading={loading}>\n//         <TodoCounter\n//           totalTodos={totalTodos}\n//           completedTodos={completedTodos}\n//         // loading={loading}\n//         />\n//         <TodoSearch\n//           searchValue={searchValue}\n//           setSearchValue={setSearchValue}\n//         // loading={loading}\n//         />\n//       </TodoHeader>\n\n//       <TodoList\n//         error={error}\n//         loading={loading}\n//         totalTodos={totalTodos}\n//         searchedTodos={searchedTodos}\n//         searchText={searchValue}\n//         onError={() => <TodosError />}\n//         onLoading={() => <TodosLoading />}\n//         onEmptyTodos={() => <EmptyTodos />}\n//         onEmptySearchResult={(searchText) => <p>No hay resultados para {searchText}</p>}\n//         render={todo => (\n//           <TodoItem\n//             key={todo.text}\n//             text={todo.text}\n//             completed={todo.completed}\n//             onComplete={() => completeTodo(todo.text)}\n//             onDelete={() => deleteTodo(todo.text)}\n//           />\n//         )}\n//       />\n\n//       {!!openModal && (\n//         <Modal>\n//           <TodoForm\n//             addTodo={addTodo}\n//             setOpenModal={setOpenModal}\n//           />\n//         </Modal>\n//       )}\n\n//       <CreateTodoButton\n//         setOpenModal={setOpenModal}\n//       />\n\n//       <ChangeAlert\n//         sincronize={sincronizeTodos}\n//       />\n//     </React.Fragment>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["/Users/juanbueno/Desktop/new-project-react/src/App/index.js"],"sourcesContent":["// import React from 'react';\n// import { useTodos } from './useTodos';\n// import { TodoHeader } from '../TodoHeader';\n// import { TodoCounter } from '../TodoCounter';\n// import { TodoSearch } from '../TodoSearch';\n// import { TodoList } from '../TodoList';\n// import { TodoItem } from '../TodoItem';\n// import { TodosError } from '../TodosError';\n// import { TodosLoading } from '../TodoLoading';\n// import { EmptyTodos } from '../EmptyTodos';\n// import { TodoForm } from '../TodoForm';\n// import { CreateTodoButton } from '../CreateTodoButton';\n// import { Modal } from '../Modal';\n// import { ChangeAlert } from '../changeAlert';\n\n// function App() {\n//   const {\n//     error,\n//     loading,\n//     searchedTodos = [],\n//     completeTodo,\n//     deleteTodo,\n//     openModal,\n//     setOpenModal,\n//     totalTodos,\n//     completedTodos,\n//     searchValue,\n//     setSearchValue,\n//     addTodo,\n//     sincronizeTodos,\n//   } = useTodos();\n\n//   return (\n//     <React.Fragment>\n//       <TodoHeader loading={loading}>\n//         <TodoCounter\n//           totalTodos={totalTodos}\n//           completedTodos={completedTodos}\n//         // loading={loading}\n//         />\n//         <TodoSearch\n//           searchValue={searchValue}\n//           setSearchValue={setSearchValue}\n//         // loading={loading}\n//         />\n//       </TodoHeader>\n\n//       <TodoList\n//         error={error}\n//         loading={loading}\n//         totalTodos={totalTodos}\n//         searchedTodos={searchedTodos}\n//         searchText={searchValue}\n//         onError={() => <TodosError />}\n//         onLoading={() => <TodosLoading />}\n//         onEmptyTodos={() => <EmptyTodos />}\n//         onEmptySearchResult={(searchText) => <p>No hay resultados para {searchText}</p>}\n//         render={todo => (\n//           <TodoItem\n//             key={todo.text}\n//             text={todo.text}\n//             completed={todo.completed}\n//             onComplete={() => completeTodo(todo.text)}\n//             onDelete={() => deleteTodo(todo.text)}\n//           />\n//         )}\n//       />\n\n//       {!!openModal && (\n//         <Modal>\n//           <TodoForm\n//             addTodo={addTodo}\n//             setOpenModal={setOpenModal}\n//           />\n//         </Modal>\n//       )}\n\n//       <CreateTodoButton\n//         setOpenModal={setOpenModal}\n//       />\n\n//       <ChangeAlert\n//         sincronize={sincronizeTodos}\n//       />\n//     </React.Fragment>\n//   );\n// }\n\n// export default App;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}